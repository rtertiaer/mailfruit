---
- name: Install prerequisites for the user database
  ansible.builtin.apt:
    name:
      - jq
      - sqlite3
    state: present

- name: List tables in database
  ansible.builtin.shell: |
    set -o pipefail
    if [ -e /var/lib/dovecot/passwd.db ]; then
       echo ".tables" | sqlite3 /var/lib/dovecot/passwd.db
    else
       echo ""
    fi
  args:
    executable: /bin/bash
  changed_when: false
  register: db_tables

- name: Create mailboxes table in database
  ansible.builtin.shell: |
    set -o pipefail
    cp /var/lib/dovecot/passwd.db{,.mailboxes.$(date +%s).bak}
    echo "CREATE TABLE 'mailboxes' (
        'user_id' INTEGER PRIMARY KEY,
        'username' VARCHAR(128) NOT NULL,
        'domain' VARCHAR(128) NOT NULL,
        'password' VARCHAR(64) NOT NULL,
        'maildir' VARCHAR(64) NOT NULL,
        'is_active' int(1) NOT NULL DEFAULT 0,
        'quota' UNSIGNED BIG INT NOT NULL DEFAULT 100000000 
    );" | sqlite3 /var/lib/dovecot/passwd.db
  when: db_tables.stdout.find('mailboxes') == -1
  args:
    executable: /bin/bash
  changed_when: true
  notify:
    - Restart dovecot

- name: Create storage_keys table in database
  ansible.builtin.shell: |
    set -o pipefail
    cp /var/lib/dovecot/passwd.db{,.storage_keys.$(date +%s).bak}
    echo "CREATE TABLE 'storage_keys' (
      'id' INTEGER PRIMARY KEY,
      'enabled' tinyint(4) DEFAULT '1',
      'version' tinyint(4) DEFAULT '1',
      'public_key' text,
      'pwhash_algo' tinyint(4) DEFAULT '1',
      'pwhash_opslimit' int(11) DEFAULT NULL,
      'pwhash_memlimit' int(11) DEFAULT NULL,
      'pwhash_salt' varchar(255) DEFAULT NULL,
      'sk_nonce' varchar(255) DEFAULT NULL,
      'locked_secretbox' text,
      'user_id' int(11) DEFAULT NULL
    );" | sqlite3 /var/lib/dovecot/passwd.db
  when: db_tables.stdout.find('storage_keys') == -1
  args:
    executable: /bin/bash
  changed_when: true
  notify:
    - Restart dovecot

- name: Manage dovecot passwd db permissions
  ansible.builtin.file:
    path: /var/lib/dovecot/passwd.db
    owner: root
    group: root
    mode: '0600'

- name: Setup /usr/local/bin/add_mailbox.sh helper script
  ansible.builtin.template:
    src: add_mailbox.sh.j2
    dest: /usr/local/bin/add_mailbox.sh
    owner: root
    group: root
    mode: '0500'
    backup: yes

# TODO: define users via ansible vars, so we can configure these here during instantiation & better test this role
- name: Test for test user
  ansible.builtin.shell: |
    set -o pipefail
    echo "select user_id from mailboxes where username='test' and domain='{{ mailfruit_mail_domain }}';" | sqlite3 /var/lib/dovecot/passwd.db
  register: test_user
  args:
    executable: /bin/bash
  changed_when: false
  when:
    - debug is defined

- name: Create test user (password 'ih68d8lS7fI3T1VNJ16ycRdVN') for debug in sqlite passwd database
  ansible.builtin.command:
    cmd: /usr/local/bin/add_user.sh
  changed_when: true
  when:
    - debug is defined
    - test_user.stdout == ''
